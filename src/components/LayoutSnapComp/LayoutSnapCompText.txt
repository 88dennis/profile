import React, { useRef, useEffect, useState } from "react";
import "./LayoutSnapComp.css";

let isMounted = false;
const LayoutSnapComp = () => {
  const sectionTwoRef = useRef();
  const sectionThreeRef = useRef();
  const sectionOneRef = useRef();

 


  const [scrolling, setScrolling] = useState(false);
  const [scrollTop, setScrollTop] = useState(0);
  const [yRefTwo, setYrefTwo] = useState(0);
  const [yRefThree, setYrefThree] = useState(0);
  const [yRefOne, setYrefOne] = useState(0);


  const [showBackToTopBtn, setShowBackToTopBtn] = useState(false);

  const [mount, setMount] = useState(false);

  //   }, [sectionTwoRef])

  // const onButtonClickToTop = () => {
  // //  window.scrollTo(0,0)
  // sectionOneRef.current.scrollIntoView({
  //   top: 70,
  //   behavior: "smooth",
  //   block: "start",
  //   // alignTo:true
  //   inline: "start",
  // });
  // };




  const onButtonClickToSecond = () => {
    //  window.scrollTo(0,0)
    sectionTwoRef.current.scrollIntoView({
      behavior: 'smooth',
       block: "end",
    // alignTo:true
    inline: "nearest",
    });
    };

  const onButtonClickToTop = () => {
    //  window.scrollTo(0,0)
    console.log(sectionOneRef.current)
    sectionOneRef.current.scrollIntoView({
      behavior: 'smooth',
       block: "end",
    // alignTo:true
    inline: "nearest",
    });
    };
  // const scrollToRef = (ref) => window.scrollTo(0, ref.current.offsetTop) 

  // const executeScroll = () => scrollToRef(myRef)

  function scrollTo() {
    var elmnt = document.getElementById("my_content2");
    elmnt.scrollIntoView({
      behavior: "smooth",
    });
  }




  // const onClickBacktoTop = () => {
  //  window.scrollTo({
  //    top:70,
  //    behavior:"smooth"
  //  })
  // };

  // const styleVisible = {
  //   top: "0",
  //   transition: "all .3s ease",
  // };

  // const styleNotVisible = {
  //   top: "-120px",
  //   transition: "all .3s ease",
  // };


  useEffect(() => {
    isMounted = true;

    let sectionElements = document.getElementsByClassName("sectionClass");
    let sectionButtons = document.getElementsByClassName("sectionButtons");
    
    function onScroll(e) {
      setScrollTop(e.target.documentElement.scrollTop);
      setScrolling(e.target.documentElement.scrollTop > scrollTop);
        const yOne = sectionOneRef.current.getBoundingClientRect().y;
      const yTwo = sectionTwoRef.current.getBoundingClientRect().y;
      const yThree = sectionThreeRef.current.getBoundingClientRect().y;
      setYrefOne(yOne);
      setYrefTwo(yTwo);
      setYrefThree(yThree);
     
    }


  function execFunc(index){
    if(sectionButtons[index].innerHTML === "Games" && sectionElements[index].title === "Games" ){
      sectionElements[index].scrollIntoView({
        behavior: "smooth",
      });
    } else if(sectionButtons[index].innerHTML === "Projects" && sectionElements[index].title === "Projects"){
      sectionElements[index].scrollIntoView({
        behavior: "smooth",
      });
    } else if(sectionButtons[index].innerHTML === "Templates" && sectionElements[index].title === "Templates"){
      sectionElements[index].scrollIntoView({
        behavior: "smooth",
      });
    }
  }
    if (!mount) {
      setMount(!mount);
      if (isMounted) {
        window.addEventListener("scroll", onScroll);
        if (yRefTwo < 0 || yRefThree < 0) {
          setShowBackToTopBtn(true);
        } else {
          setShowBackToTopBtn(false);
        }
    for(let i = 0; i < sectionElements.length; i++){
      sectionButtons[i].addEventListener("click", function(){
       execFunc(i);
      })
    }
      }
    }

    return () => {
      window.removeEventListener("scroll", onScroll);
      for(let i = 0; i < sectionElements.length; i++){
        sectionButtons[i].removeEventListener("click", function(){
          execFunc(i);
        })  
      }
      isMounted = false;
      
    };
  }, [scrollTop, mount, yRefTwo]);

  // console.log(scrollTop)
  // console.log(scrolling)
  console.log(yRefTwo, "yRef");
//   console.log(yRefThree, "THREE");
  console.log(showBackToTopBtn, "yRef");

  function isScrolling() {
    if (scrolling && scrollTop > 30) {
      // setShowNav(false);
      return true;
    } else {
      // setShowNav(true);
      return false;
    }
  }

  return (
    <div className="snap_wrapper">
      <section ref={sectionOneRef} title="Games" className="snap_one sectionClass">
        <div className="snap_content">

        <button  className="sectionButtons">Games</button>
        <button onClick={onButtonClickToSecond} className="sectionButtons">Projects</button>
        <button onClick={onButtonClickToSecond}className="sectionButtons">Templates</button>
        <h1>Heading</h1>

          <p>
            asdsadasdasdasas asdsadasdasdasas asdsadasdasdasa asdsadasdasdasas
            asdsadasdasdasas asdsadasdasdasas asdsadasdasdasas asdsadasdasdasas
          </p>
        </div>
      </section>
      <section title="Projects" ref={sectionTwoRef} id="my_content2" className="snap_two sectionClass">
        <div className="snap_content">
          <h1>Heading</h1>
          {showBackToTopBtn && (
            <button onClick={onButtonClickToTop}>Back To Top</button>
          )}
          <p>
            asdsadasdasdasas asdsadasdasdasas asdsadasdasdasa asdsadasdasdasas
            asdsadasdasdasas asdsadasdasdasas asdsadasdasdasas asdsadasdasdasas
          </p>
        </div>
      </section>
      <section title="Templates" ref={sectionThreeRef} className="snap_three sectionClass">
        <div className="snap_content">
          <h1>Heading</h1>

          {showBackToTopBtn && (
            <button onClick={onButtonClickToTop}>Back To Top</button>
          )}
          <p>
            asdsadasdasdasas asdsadasdasdasas asdsadasdasdasa asdsadasdasdasas
            asdsadasdasdasas asdsadasdasdasas asdsadasdasdasas asdsadasdasdasas
          </p>
        </div>
      </section>
    </div>
  );
};

export default LayoutSnapComp;
